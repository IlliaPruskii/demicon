{"ast":null,"code":"var _jsxFileName = \"/Users/Illia_Pruskyi/Desktop/demicon/frontend/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useMemo, useState } from \"react\";\nimport axios from \"axios\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Container from \"react-bootstrap/Container\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport Card from \"react-bootstrap/Card\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API = 'http://localhost:8000/';\n\nconst App = () => {\n  _s();\n\n  const [countryNames, setCountryNames] = useState([]);\n  const [selectedCountry, setSelectedCountry] = useState(null);\n  const [countries, setCountries] = useState([]);\n\n  const getUsers = async () => {\n    const res = await axios.get(API);\n    return res.data;\n  };\n\n  const setNewtData = async () => {\n    const data = await getUsers();\n    const countriesArray = data.countries.map(country => country.name);\n    setSelectedCountry(countriesArray[0]);\n    setCountries(data.countries);\n    setCountryNames(countriesArray);\n  };\n\n  const users = useMemo(() => {\n    const currentCountry = countries.find(data => data.name === selectedCountry);\n\n    if (currentCountry) {\n      return currentCountry.users;\n    }\n\n    return [];\n  }, [countries, selectedCountry]);\n\n  const changeHandler = e => {\n    setSelectedCountry(e.target.value);\n  };\n\n  const reloadHandler = async () => {\n    await axios.post(API);\n  };\n\n  useEffect(() => {\n    setDefaultData();\n    setNewtData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"mt-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex justify-content-between w-500 mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: selectedCountry && /*#__PURE__*/_jsxDEV(Form.Select, {\n          value: \"3\",\n          onChange: changeHandler,\n          children: countryNames.map(countries => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: countries,\n            children: countries\n          }, countries, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: reloadHandler,\n        children: \"Reload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), users.map(user => /*#__PURE__*/_jsxDEV(Card, {\n      className: \"mb-3\",\n      children: /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"fw-bold\",\n            children: \"Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 20\n          }, this), \" \", user.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"fw-bold\",\n            children: \"Gender:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 20\n          }, this), \" \", user.gender]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"fw-bold\",\n            children: \"Email:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 20\n          }, this), \" \", user.email]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"7nzVaTHauTb2fkONTdOsDkvnB+s=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useMemo","useState","axios","Container","Form","Button","Card","API","App","countryNames","setCountryNames","selectedCountry","setSelectedCountry","countries","setCountries","getUsers","res","get","data","setNewtData","countriesArray","map","country","name","users","currentCountry","find","changeHandler","e","target","value","reloadHandler","post","setDefaultData","user","gender","email"],"sources":["/Users/Illia_Pruskyi/Desktop/demicon/frontend/src/App.tsx"],"sourcesContent":["import React, { useEffect, useMemo, useState } from \"react\";\nimport axios from \"axios\"\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Container from \"react-bootstrap/Container\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport Card from \"react-bootstrap/Card\";\n\nconst API = 'http://localhost:8000/'\n\ntype User = {\n  gender: string\n  name: string\n  country: string\n  email: string\n}\n\ntype Users = Array<User>\n\ntype Country = {\n  name: string\n  users: Users\n}\n\ntype Countries = Array<Country>\n\nconst App = () => {\n  const [countryNames, setCountryNames] = useState<Array<string>>([])\n  const [selectedCountry, setSelectedCountry] = useState<string | null>(null)\n  const [countries, setCountries] = useState<Countries>([])\n\n  const getUsers = async () => {\n    const res = await axios.get<{ countries: Countries }>(API)\n    return res.data\n  }\n  \n  const setNewtData = async () => {\n    const data = await getUsers()\n    const countriesArray = data.countries.map((country) => country.name)\n    setSelectedCountry(countriesArray[0])\n    setCountries(data.countries)\n    setCountryNames(countriesArray)\n  }\n\n  const users = useMemo(() => {\n    const currentCountry = countries.find((data) => data.name === selectedCountry)\n    if (currentCountry) {\n      return currentCountry.users\n    }\n\n    return []\n  }, [countries, selectedCountry])\n\n  const changeHandler = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    setSelectedCountry(e.target.value)\n  }\n\n  const reloadHandler = async () => {\n    await axios.post<{ countries: Countries }>(API)\n  }\n\n  useEffect(() => {\n    setDefaultData()\n    setNewtData()\n  }, [])\n\n  return (\n    <Container className=\"mt-4\">\n      <div className=\"d-flex justify-content-between w-500 mb-4\">\n        <div>\n          {selectedCountry && (\n            <Form.Select value=\"3\" onChange={changeHandler}>\n              {countryNames.map((countries) => (\n                <option key={countries} value={countries}>{countries}</option>\n              ))}\n           </Form.Select>\n          )}\n        </div>\n        <Button onClick={reloadHandler}>Reload</Button>\n      </div>\n      {users.map((user) => (\n        <Card className=\"mb-3\">\n          <Card.Body>\n              <div><span className=\"fw-bold\">Name:</span> {user.name}</div>\n              <div><span className=\"fw-bold\">Gender:</span> {user.gender}</div>\n              <div><span className=\"fw-bold\">Email:</span> {user.email}</div>\n          </Card.Body>\n        </Card>\n      ))}\n    </Container>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}